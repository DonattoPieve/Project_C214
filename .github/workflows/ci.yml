name: CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    name: Testes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar tudo via script
        run: bash scripts/setup.sh

      - name: Rodar pytest (cobertura)
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=src --cov-report=term-missing \
            --cov-report=xml --cov-report=html

      - name: Publicar artefatos do relatório de testes
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: |
            htmlcov/**
            .coverage
            coverage.xml

  build:
    # Roda em paralelo com "tests"
    name: Build (empacotamento)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar tudo via script
        run: bash scripts/setup.sh

      - name: Empacotar (sdist e wheel)
        run: python -m build

      - name: Publicar artefatos do pacote
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          path: dist/*

  notify:
    name: Notificação por e-mail
    runs-on: ubuntu-latest
    needs: [tests, build]   # só notifica após terminar os dois
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Enviar e-mail com status
        env:
          NOTIFY_EMAIL: ${{ secrets.NOTIFY_EMAIL }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          SMTP_USE_TLS: ${{ secrets.SMTP_USE_TLS }}
          TEST_STATUS: ${{ needs.tests.result }}
          BUILD_STATUS: ${{ needs.build.result }}
        run: python scripts/send_email.py
